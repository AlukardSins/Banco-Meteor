[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"body.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////\n//                                                                                 //\n// imports/ui/body.html                                                            //\n//                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////\n                                                                                   //\nmodule.watch(require(\"./template.body.js\"), {\n  \"*\": module.makeNsSetter(true)\n});\n\n/////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.body.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////\n//                                                                                 //\n// imports/ui/template.body.js                                                     //\n//                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////\n                                                                                   //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, HTML.Raw('\\n\\t<header>\\n\\t\\t<h1>Todo List</h1>\\n\\n\\t\\t<form class=\"new-task\">\\n        <input type=\"text\" name=\"text\" placeholder=\"Type to add new tasks\">\\n      </form>\\n\\t</header>\\n \\n\\t'), HTML.UL(\"\\n\\t\\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"tasks\"));\n  }, function() {\n    return [ \"\\n\\t\\t\", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n\\t\\t\" ];\n  }), \"\\n\\t\"), \"\\n\\t\");\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"task\");\nTemplate[\"task\"] = new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI(Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  }));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////\n\n},\"body.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////\n//                                                                                 //\n// imports/ui/body.js                                                              //\n//                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////\n                                                                                   //\nlet Template;\nmodule.watch(require(\"meteor/templating\"), {\n  Template(v) {\n    Template = v;\n  }\n\n}, 0);\nlet Tasks;\nmodule.watch(require(\"../api/tasks.js\"), {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 1);\nmodule.watch(require(\"./body.html\"));\nTemplate.body.helpers({\n  tasks() {\n    // Show newest tasks at the top\n    return Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    });\n  }\n\n});\nTemplate.body.events({\n  'submit .new-task'(event) {\n    // Prevent default browser form submit\n    event.preventDefault(); // Get value from form element\n\n    const target = event.target;\n    const text = target.text.value; // Insert a task into the collection\n\n    Tasks.insert({\n      text,\n      createdAt: new Date() // current time\n\n    }); // Clear form\n\n    target.text.value = '';\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////\n\n}},\"api\":{\"tasks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////\n//                                                                                 //\n// imports/api/tasks.js                                                            //\n//                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////\n                                                                                   //\nmodule.export({\n  Tasks: () => Tasks\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Tasks = new Mongo.Collection('tasks');\n/////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////\n//                                                                                 //\n// client/main.js                                                                  //\n//                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////\n                                                                                   //\nmodule.watch(require(\"../imports/ui/body.js\"));\n/////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/body.js","imports/api/tasks.js","client/main.js"],"names":["Template","module","watch","require","v","Tasks","body","helpers","tasks","find","sort","createdAt","events","event","preventDefault","target","text","value","insert","Date","export","Mongo","Collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,QAAJ;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACH,WAASI,CAAT,EAAW;AAACJ,eAASI,CAAT;AAAW;;AAAxB,CAA1C,EAAoE,CAApE;AAAuE,IAAIC,KAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACE,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAAxC,EAA4D,CAA5D;AAA+DH,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb;AAM7JH,SAASM,IAAT,CAAcC,OAAd,CAAsB;AACpBC,UAAQ;AACN;AACA,WAAOH,MAAMI,IAAN,CAAW,EAAX,EAAe;AAAEC,YAAM;AAAEC,mBAAW,CAAC;AAAd;AAAR,KAAf,CAAP;AACD;;AAJmB,CAAtB;AAOAX,SAASM,IAAT,CAAcM,MAAd,CAAqB;AACnB,qBAAmBC,KAAnB,EAA0B;AACxB;AACAA,UAAMC,cAAN,GAFwB,CAIxB;;AACA,UAAMC,SAASF,MAAME,MAArB;AACA,UAAMC,OAAOD,OAAOC,IAAP,CAAYC,KAAzB,CANwB,CAQxB;;AACAZ,UAAMa,MAAN,CAAa;AACXF,UADW;AAEXL,iBAAW,IAAIQ,IAAJ,EAFA,CAEY;;AAFZ,KAAb,EATwB,CAcxB;;AACAJ,WAAOC,IAAP,CAAYC,KAAZ,GAAoB,EAApB;AACD;;AAjBkB,CAArB,E;;;;;;;;;;;ACbAhB,OAAOmB,MAAP,CAAc;AAACf,SAAM,MAAIA;AAAX,CAAd;AAAiC,IAAIgB,KAAJ;AAAUpB,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACkB,QAAMjB,CAAN,EAAQ;AAACiB,YAAMjB,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAEpC,MAAMC,QAAQ,IAAIgB,MAAMC,UAAV,CAAqB,OAArB,CAAd,C;;;;;;;;;;;ACFPrB,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,E","file":"/app.js","sourcesContent":["import { Template } from 'meteor/templating';\r\n\r\nimport { Tasks } from '../api/tasks.js';\r\n \r\nimport './body.html';\r\n \r\nTemplate.body.helpers({\r\n  tasks() {\r\n    // Show newest tasks at the top\r\n    return Tasks.find({}, { sort: { createdAt: -1 } });\r\n  },\r\n});\r\n\r\nTemplate.body.events({\r\n  'submit .new-task'(event) {\r\n    // Prevent default browser form submit\r\n    event.preventDefault();\r\n \r\n    // Get value from form element\r\n    const target = event.target;\r\n    const text = target.text.value;\r\n \r\n    // Insert a task into the collection\r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(), // current time\r\n    });\r\n \r\n    // Clear form\r\n    target.text.value = '';\r\n  },\r\n});","import { Mongo } from 'meteor/mongo';\r\n \r\nexport const Tasks = new Mongo.Collection('tasks');","import '../imports/ui/body.js';"]}}]